project.ext {
    //Android
    compileSdkVersion = 29
    buildToolsVersion = "29.0.2"
    minSdkVersion = 22
    targetSdkVersion = 29
    applicationId = "com.wx.legu"
    versionCode = 1
    versionName = "1.0"

    //debug
    isApplication = true

    //App配置
    appConfig = {
        app ->
            app.apply plugin: 'com.android.application'
            app.apply plugin: 'kotlin-android'
            app.apply plugin: 'kotlin-android-extensions'
            app.apply plugin:  'kotlin-kapt'
            app.description "app"
            appDefaultConfig app.android
            dependenciesConfig app.dependencies
    }

    //lib库配置
    libConfig = {
        lib ->
            lib.apply plugin: 'com.android.library'
            lib.apply plugin: 'kotlin-android'
            lib.apply plugin: 'kotlin-android-extensions'
            lib.apply plugin:  'kotlin-kapt'
            lib.description "lib"
            libDefaultConfig lib.android
            libDependenciesConfig lib.dependencies
    }
    //module配置
    moduleConfig = {
        module ->
            if (project.ext.isApplication) {
                module.apply plugin: 'com.android.application'
                module.description "app"
            } else {
                module.apply plugin: 'com.android.library'
                module.description "lib"
            }
            module.apply plugin: 'kotlin-android'
            module.apply plugin: 'kotlin-android-extensions'
            module.apply plugin:  'kotlin-kapt'
            moduleDefaultConfig module.android
            dependenciesConfig module.dependencies
    }

    appDefaultConfig = {
        extension ->
            extension.compileSdkVersion project.ext.compileSdkVersion
            extension.buildToolsVersion project.ext.buildToolsVersion

            extension.defaultConfig {
                applicationId project.ext.applicationId
                minSdkVersion project.ext.minSdkVersion
                targetSdkVersion project.ext.targetSdkVersion
                versionCode project.ext.versionCode
                versionName project.ext.versionName

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                extension.compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
            kapt {
                arguments {
                    arg("AROUTER_MODULE_NAME", project.getName())
                }
            }
    }

    libDefaultConfig = {
        extension ->
            extension.compileSdkVersion project.ext.compileSdkVersion
            extension.buildToolsVersion project.ext.buildToolsVersion
            extension.defaultConfig {
                minSdkVersion project.ext.minSdkVersion
                targetSdkVersion project.ext.targetSdkVersion
                versionCode project.ext.versionCode
                versionName project.ext.versionName

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
    }

    moduleDefaultConfig = {
        extension ->
            extension.compileSdkVersion project.ext.compileSdkVersion
            extension.buildToolsVersion project.ext.buildToolsVersion
            extension.defaultConfig {
                minSdkVersion project.ext.minSdkVersion
                targetSdkVersion project.ext.targetSdkVersion
                versionCode project.ext.versionCode
                versionName project.ext.versionName

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
            if (project.ext.isApplication) {
                extension.compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
            kapt {
                arguments {
                    arg("AROUTER_MODULE_NAME", project.getName())
                }
            }

            extension.sourceSets {
                main {
                    if (project.ext.isApplication) {
                        manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
                    } else {
                        manifest.srcFile 'src/main/AndroidManifest.xml'
                    }
                }
            }
    }

    libDependenciesConfig = {
        dependency ->
            dependency.implementation fileTree(dir: 'libs', include: ['*.jar'])
            dependency.testImplementation 'junit:junit:4.12'
            dependency.androidTestImplementation 'androidx.test.ext:junit:1.1.1'
            dependency.androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    }

    dependenciesConfig = {
        dependency ->
            dependency.implementation fileTree(dir: 'libs', include: ['*.jar'])
            dependency.kapt 'com.alibaba:arouter-compiler:1.2.2'
            dependency.implementation 'com.alibaba:arouter-api:1.5.0'
            dependency.testImplementation 'junit:junit:4.12'
            dependency.androidTestImplementation 'androidx.test.ext:junit:1.1.1'
            dependency.androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    }

    def room_version = '2.2.5'
    def lifecycle_version = '2.2.0'
    def nav_version = '2.3.0-alpha01'
    def retrofit_version = '2.8.1'
    dependencies = [
            stdlib : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            appcompat : 'androidx.appcompat:appcompat:1.1.0',
            core_ktx : 'androidx.core:core-ktx:1.2.0',
            activity_ktx : 'androidx.activity:activity-ktx:1.2.0-alpha03',
            recyclerView : 'androidx.recyclerview:recyclerview:1.2.0-alpha03',
            swipeRefreshLayout : 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-rc01',
            fragment_ktx : 'androidx.fragment:fragment-ktx:1.3.0-alpha04',
            material : 'com.google.android.material:material:1.2.0-alpha06',
            constraintLayout : 'androidx.constraintlayout:constraintlayout:2.0.0-beta4',
            viewPager2 : 'androidx.viewpager2:viewpager2:1.0.0',

            //room
            room_runtime : "androidx.room:room-runtime:$room_version",
            room_compiler : "androidx.room:room-compiler:$room_version",
            room_ktx : "androidx.room:room-ktx:$room_version",
            //lifecycle
            lifecycle :  "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
            lifecycle_viewmodel :  "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
            lifecycle_livedata : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
            //navigation
            navigation_fragment :  "androidx.navigation:navigation-fragment-ktx:$nav_version",
            navigation_ui :  "androidx.navigation:navigation-ui-ktx:$nav_version",
            //paging
            paging : "androidx.paging:paging-runtime:2.1.1",
            //workmanager
            workManager : "androidx.work:work-runtime-ktx:2.3.1",

            //Image
            glide : 'com.github.bumptech.glide:glide:4.11.0',
            glide_kapt : 'com.github.bumptech.glide:compiler:4.11.0',

            coil : 'io.coil-kt:coil:0.11.0',

            retrofit : "com.squareup.retrofit2:retrofit:$retrofit_version",
            gson_converters : "com.squareup.retrofit2:converter-gson:$retrofit_version",
            protobuf_converters : "com.squareup.retrofit2:converter-protobuf:$retrofit_version",
            moshi_converters : "com.squareup.retrofit2:converter-moshi:$retrofit_version",

            smartRefreshLayout : 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0',
            smartRefreshHeader : 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0',

            shimmerLayout : 'io.supercharge:shimmerlayout:2.1.0',
            
            banner : 'com.to.aboomy:pager2banner:0.0.4'


    ]

}
